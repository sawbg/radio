.TH "radio::PlTone" 3 "Wed Apr 13 2016" "An Inexpensive, Software-Defined IF Modulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
radio::PlTone \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PlTone\&.hpp>\fP
.PP
Inherits \fBradio::Sinusoid\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPlTone\fP (\fBfloat32\fP amplitude, \fBfloat32\fP *data, \fBuint32\fP size, \fBfloat32\fP \fBfrequency\fP, \fBuint32\fP \fBsamplingRate\fP)"
.br
.ti -1c
.RI "void \fBAdd\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class creates a CTCSS subcarrier (PL tone) at a specified frequency in a baseband signal\&. 
.PP
Definition at line 18 of file PlTone\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "radio::PlTone::PlTone (\fBfloat32\fPamplitude, \fBfloat32\fP *data, \fBuint32\fPsize, \fBfloat32\fPfrequency, \fBuint32\fPsamplingRate)"
Creates a \fBPlTone\fP object\&.
.PP
\fBParameters:\fP
.RS 4
\fIamplitude\fP the amplitude (0-1) of the subcarrier\&. Assumes baseband signal has a peak-to-peak range of -1 to 1\&.
.br
\fIdata\fP an array containing a portion of the discrete baseband signal
.br
\fIsize\fP the number of elemeents in the data array
.br
\fIfrequency\fP the frequency of the CTCSS tone in the baseband (not in the IF or RF signals)
.br
\fIsamplingRate\fP the sampling frequency of the baseband signal 
.RE
.PP

.PP
Definition at line 63 of file PlTone\&.hpp\&.
.PP
.nf
65         : Sinusoid(frequency, samplingRate) {
66         this->data = data;
67         this->amplitude = amplitude;
68         this->size = size;
69 
70         for(uint32 i = 0; i < samplingRate; i++) {
71             sinusoid[i] *= amplitude;
72         }
73     }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void radio::PlTone::Add ()"
Adds the CTCSS tone to the baseband signal\&. 
.PP
Definition at line 75 of file PlTone\&.hpp\&.
.PP
.nf
75                      {
76         for(uint32 i = 0; i < size; i++) {
77             data[i] += amplitude * next();
78             data[i] /= (1 + amplitude);  // ensures value <= 1
79         }
80     }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for An Inexpensive, Software-Defined IF Modulator from the source code\&.
