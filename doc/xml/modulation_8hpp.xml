<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="modulation_8hpp" kind="file">
    <compoundname>modulation.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">vector</includes>
    <includes refid="definitions_8hpp" local="yes">definitions.hpp</includes>
    <incdepgraph>
      <node id="184">
        <label>cmath</label>
      </node>
      <node id="187">
        <label>definitions.hpp</label>
        <link refid="definitions_8hpp"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>vector</label>
      </node>
      <node id="183">
        <label>array</label>
      </node>
      <node id="185">
        <label>cstdlib</label>
      </node>
      <node id="182">
        <label>src/modulation.hpp</label>
        <link refid="modulation.hpp"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>complex</label>
      </node>
    </incdepgraph>
    <innerclass refid="classradio_1_1Modulator" prot="public">radio::Modulator</innerclass>
    <innerclass refid="classradio_1_1DsbLcModulator" prot="public">radio::DsbLcModulator</innerclass>
    <innerclass refid="classradio_1_1DsbScModulator" prot="public">radio::DsbScModulator</innerclass>
    <innernamespace refid="namespaceradio">radio</innernamespace>
    <briefdescription>
<para>Contains the classes for the various types of modulation supported by the program. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Andrew Wisner, <ulink url="mailto:awisner94@gmail.com">awisner94@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>modulation_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>modulation_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8hpp" kindref="compound">definitions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceradio" kindref="compound">radio</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classradio_1_1Modulator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classradio_1_1Modulator_1a44e9de3acd9499b31da5064b039e7a15" kindref="member">Mod</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>*<sp/><ref refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" kindref="member">carrier</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>*<sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classradio_1_1Modulator_1a4ce73238d07f8703b7b905c9c6dba28e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a4ce73238d07f8703b7b905c9c6dba28e" kindref="member">Modulator</ref>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>data[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>size)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref>(20000,<sp/>48000,<sp/>data,<sp/>size)<sp/>{};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a4ce73238d07f8703b7b905c9c6dba28e" kindref="member">Modulator</ref>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>freqInter,<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>rate,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>data[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>size);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>freqCarrier;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeCarrier();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classradio_1_1DsbLcModulator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradio_1_1DsbLcModulator" kindref="compound">DsbLcModulator</ref><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112" refid="classradio_1_1DsbLcModulator_1a26c13b2fa95c6ff4cd769abaa4749f4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1DsbLcModulator_1a26c13b2fa95c6ff4cd769abaa4749f4b" kindref="member">DsbLcModulator</ref>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref>(data,size)<sp/>{};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classradio_1_1DsbLcModulator_1a2ffec261c4988ab9405004320781d668" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1DsbLcModulator_1a2ffec261c4988ab9405004320781d668" kindref="member">DsbLcModulator</ref>(<ref refid="definitions_8hpp_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>freqInter,<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref>(freqInter,<sp/>rate,<sp/>data,<sp/>size)<sp/>{};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classradio_1_1DsbLcModulator_1ad6b7f8af29cadd93ffa104e598485c25" kindref="member">Mod</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classradio_1_1DsbScModulator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classradio_1_1DsbScModulator" kindref="compound">DsbScModulator</ref><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150" refid="classradio_1_1DsbScModulator_1a42c1c1334d51a32a36dce54cd8cf1201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1DsbScModulator_1a42c1c1334d51a32a36dce54cd8cf1201" kindref="member">DsbScModulator</ref>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref>(data,size)<sp/>{};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classradio_1_1DsbScModulator_1a14281797132e055bc2e2a726ca5932a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1DsbScModulator_1a14281797132e055bc2e2a726ca5932a0" kindref="member">DsbScModulator</ref>(<ref refid="definitions_8hpp_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>freqInter,<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[],<sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classradio_1_1Modulator" kindref="compound">Modulator</ref>(freqInter,<sp/>rate,<sp/>data,<sp/>size)<sp/>{};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classradio_1_1DsbScModulator_1a0925dbd82745c282a488a45b0ee1410b" kindref="member">Mod</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classradio_1_1Modulator_1a07ffbd7e75e18027c60e77d4fc5b5e37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a4ce73238d07f8703b7b905c9c6dba28e" kindref="member">Modulator::Modulator</ref>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>carrier,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>rate,<sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>data[],</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqCarrier<sp/>=<sp/><ref refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" kindref="member">carrier</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;rate<sp/>=<sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;carrier<sp/>=<sp/>(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>*)malloc(rate*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeCarrier();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Modulator::makeCarrier()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" kindref="member">carrier</ref>[i]<sp/>=<sp/>cos(2<sp/>*<sp/>M_PI<sp/>*<sp/>freqCarrier</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>i<sp/>/<sp/>rate);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classradio_1_1DsbLcModulator_1ad6b7f8af29cadd93ffa104e598485c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classradio_1_1DsbLcModulator_1ad6b7f8af29cadd93ffa104e598485c25" kindref="member">DsbLcModulator::Mod</ref>()<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>;<sp/>i++,<sp/><ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref><sp/>&gt;=<sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref>)<sp/><ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[i]<sp/>=<sp/>((<ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[i]<sp/>+<sp/>1)<sp/>*<sp/><ref refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" kindref="member">carrier</ref>[<ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref>])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classradio_1_1DsbScModulator_1a0925dbd82745c282a488a45b0ee1410b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classradio_1_1DsbScModulator_1a0925dbd82745c282a488a45b0ee1410b" kindref="member">DsbScModulator::Mod</ref>()<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/>temp;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classradio_1_1Modulator_1ad1fbba4bdd6a8c8d2ff05cb7be60fc5c" kindref="member">size</ref>;<sp/>i++,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref><sp/>=<sp/>(carrInd<sp/>&lt;<sp/><ref refid="classradio_1_1Modulator_1a8901a2170e850a767dd40f9494dd7536" kindref="member">rate</ref><sp/>?<sp/>carrInd<sp/>+<sp/>1<sp/>:<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>((float)<ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[i]/128)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classradio_1_1Modulator_1a39d698f7720aa3677ecaf1baf83c8fa0" kindref="member">data</ref>[i]<sp/>=<sp/>temp<sp/>*<sp/><ref refid="classradio_1_1Modulator_1a42d68c4f2d9819ede178b9dea23fecee" kindref="member">carrier</ref>[<ref refid="classradio_1_1Modulator_1a9a4b25f4589e30915ef4836c8b01cd93" kindref="member">carrInd</ref>];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/pi/radio/src/modulation.hpp"/>
  </compounddef>
</doxygen>
