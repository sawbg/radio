<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="namespaceradio" kind="namespace">
    <compoundname>radio</compoundname>
    <innerclass refid="classradio_1_1DsbLcModulator" prot="public">radio::DsbLcModulator</innerclass>
    <innerclass refid="classradio_1_1DsbScModulator" prot="public">radio::DsbScModulator</innerclass>
    <innerclass refid="classradio_1_1Filter" prot="public">radio::Filter</innerclass>
    <innerclass refid="classradio_1_1Modulator" prot="public">radio::Modulator</innerclass>
    <innerclass refid="classradio_1_1ZDomain" prot="public">radio::ZDomain</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3" prot="public" static="no">
        <name>Age</name>
        <enumvalue id="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3afbe8ecd067dc1095175b7cdc7cecbb82" prot="public">
          <name>OLD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3ac1a7d3b0b6d1c9639e94bdd8c8692686" prot="public">
          <name>NEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Describes the age of a filter (from last Pass() or in this Pass()) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="50" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0dac" prot="public" static="no">
        <name>Fractional</name>
        <enumvalue id="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0daca7436a425f0fd0f72aa39de328f2bdd48" prot="public">
          <name>NUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0daca2fd2fe719e453d2bda50a402c0f49abe" prot="public">
          <name>DEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Describes the numerator and denominator of a z-domain transfer function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="55" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceradio_1a9bd902e9216499953a5906de73dc1796" prot="public" static="no" mutable="no">
        <type><ref refid="definitions_8hpp_1af19387f95516e2132a08cf60503f22a5" kindref="member">fparams</ref></type>
        <definition>fparams radio::F_BASEBAND</definition>
        <argsstring></argsstring>
        <name>F_BASEBAND</name>
        <initializer>= { std::vector&lt;<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>&gt; {
		0.0008977019461,
			-0.002215694636,
			0.001372192986,
			0.001372192986,
			-0.002215694636,
			0.0008977019461
	}, std::vector&lt;<ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>&gt; {
		1,
			-4.678616047,
			8.822912216,
			-8.379911423,
			4.007629871,
			-0.7719064355
	} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Baseband filter coefficients. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/fvectors.hpp" line="19" column="1" bodyfile="/home/pi/radio/src/fvectors.hpp" bodystart="19" bodyend="-1"/>
        <referencedby refid="baseband__filter__test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="baseband__filter__test_8cpp" startline="24" endline="45">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceradio_1aa04bb922c40cafb00a5603f1fc6d9c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radio::aconj</definition>
        <argsstring>(cfloat32 *data, uint32 size)</argsstring>
        <name>aconj</name>
        <param>
          <type><ref refid="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" kindref="member">cfloat32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the values in an array of complex float32&apos;s with their respective conjugates.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the array whose values should be replaced with their respective conjugates</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements in the data array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/zdomain.hpp" line="26" column="1" bodyfile="/home/pi/radio/src/zdomain.hpp" bodystart="84" bodyend="88"/>
        <referencedby refid="namespaceradio_1a51add4e2faf6d58cabc3b4a3892420eb" compoundref="zdomain_8hpp" startline="158" endline="166">ifft</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceradio_1ab146b5bf7f1c005939b024c9c4910a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radio::fft</definition>
        <argsstring>(cfloat32 *data, uint32 size)</argsstring>
        <name>fft</name>
        <param>
          <type><ref refid="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" kindref="member">cfloat32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the values of an array of cfloat32&apos;s with the array&apos;s DFT using a decimation-in-frequency algorithm.</para><para>This code is based on code from <ulink url="http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B">http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B</ulink>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the array whose values should be replaced with its DFT</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements in the data array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/zdomain.hpp" line="39" column="1" bodyfile="/home/pi/radio/src/zdomain.hpp" bodystart="90" bodyend="136"/>
        <referencedby refid="fft__test2_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="fft__test2_8cpp" startline="22" endline="59">main</referencedby>
        <referencedby refid="namespaceradio_1a285a47b4ed81e5662d2b6b4bae0188d0" compoundref="zdomain_8hpp" startline="138" endline="156">hilbert</referencedby>
        <referencedby refid="namespaceradio_1a51add4e2faf6d58cabc3b4a3892420eb" compoundref="zdomain_8hpp" startline="158" endline="166">ifft</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceradio_1a285a47b4ed81e5662d2b6b4bae0188d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radio::hilbert</definition>
        <argsstring>(float32 *data, float32 *dest, uint32 size)</argsstring>
        <name>hilbert</name>
        <param>
          <type><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs the hilbert transfor of an array of float32&apos;s.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the source array of the REAL numbers of which to take the Hilbert transform</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination array of REAL numbers for the results of the Hilbert transform</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements in the data and dest arrays </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/zdomain.hpp" line="52" column="1" bodyfile="/home/pi/radio/src/zdomain.hpp" bodystart="138" bodyend="156"/>
        <references refid="namespaceradio_1ab146b5bf7f1c005939b024c9c4910a77" compoundref="zdomain_8hpp" startline="90" endline="136">fft</references>
        <references refid="namespaceradio_1a51add4e2faf6d58cabc3b4a3892420eb" compoundref="zdomain_8hpp" startline="158" endline="166">ifft</references>
        <referencedby refid="fft__test2_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="fft__test2_8cpp" startline="22" endline="59">main</referencedby>
        <referencedby refid="namespaceradio_1a7166522e76ff88e8d482491b1b6e2275" compoundref="zdomain_8hpp" startline="168" endline="176">makeIQ</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceradio_1a51add4e2faf6d58cabc3b4a3892420eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radio::ifft</definition>
        <argsstring>(cfloat32 *data, uint32 size)</argsstring>
        <name>ifft</name>
        <param>
          <type><ref refid="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" kindref="member">cfloat32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the values of an array of cfloat32&apos;s with the array&apos;s inverse DFT.</para><para>This code is based on code from <ulink url="http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B">http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B</ulink>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the array whose values should be replaced with its inverse DFT</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements in the data array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/zdomain.hpp" line="66" column="1" bodyfile="/home/pi/radio/src/zdomain.hpp" bodystart="158" bodyend="166"/>
        <references refid="namespaceradio_1aa04bb922c40cafb00a5603f1fc6d9c26" compoundref="zdomain_8hpp" startline="84" endline="88">aconj</references>
        <references refid="namespaceradio_1ab146b5bf7f1c005939b024c9c4910a77" compoundref="zdomain_8hpp" startline="90" endline="136">fft</references>
        <referencedby refid="fft__test2_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="fft__test2_8cpp" startline="22" endline="59">main</referencedby>
        <referencedby refid="namespaceradio_1a285a47b4ed81e5662d2b6b4bae0188d0" compoundref="zdomain_8hpp" startline="138" endline="156">hilbert</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceradio_1a7166522e76ff88e8d482491b1b6e2275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void radio::makeIQ</definition>
        <argsstring>(float32 *data, float32 *dest, uint32 size)</argsstring>
        <name>makeIQ</name>
        <param>
          <type><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Produces an interleaved array of first an element from an original array of data and then an element from the original data&apos;s Hilbert transform. This function is intended to generate a two-channel output (I/Q output) for mixing applications.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the original data (left channel)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>the interleaved data (left channel original data, right channel transformed data) twice the size of the original data array</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements in the data array (NOT in the destination array) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/zdomain.hpp" line="82" column="1" bodyfile="/home/pi/radio/src/zdomain.hpp" bodystart="168" bodyend="176"/>
        <references refid="namespaceradio_1a285a47b4ed81e5662d2b6b4bae0188d0" compoundref="zdomain_8hpp" startline="138" endline="156">hilbert</references>
        <referencedby refid="iq__test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="iq__test_8cpp" startline="20" endline="34">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This namespace contains all the classes, functions, and enumerations used in the application. </para>    </detaileddescription>
    <location file="/home/pi/radio/src/definitions.hpp" line="46" column="1"/>
  </compounddef>
</doxygen>
