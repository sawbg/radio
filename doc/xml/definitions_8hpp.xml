<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="definitions_8hpp" kind="file">
    <compoundname>definitions.hpp</compoundname>
    <includes local="no">complex</includes>
    <includedby refid="alsa__test_8cpp" local="yes">src/alsa_test.cpp</includedby>
    <includedby refid="baseband__filter__test_8cpp" local="yes">src/baseband_filter_test.cpp</includedby>
    <includedby refid="Filter_8hpp" local="yes">src/Filter.hpp</includedby>
    <includedby refid="fvectors_8hpp" local="yes">src/fvectors.hpp</includedby>
    <includedby refid="zdomain_8hpp" local="yes">src/zdomain.hpp</includedby>
    <includedby refid="fft__test2_8cpp" local="yes">src/fft_test2.cpp</includedby>
    <includedby refid="mic__test_8cpp" local="yes">src/mic_test.cpp</includedby>
    <includedby refid="modulation_8hpp" local="yes">src/modulation.hpp</includedby>
    <includedby refid="ZDomain_8hpp" local="yes">src/ZDomain.hpp</includedby>
    <incdepgraph>
      <node id="128">
        <label>src/definitions.hpp</label>
        <link refid="definitions.hpp"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="137">
        <label>src/iq_test.cpp</label>
        <link refid="iq__test_8cpp"/>
      </node>
      <node id="132">
        <label>src/baseband_filter_test.cpp</label>
        <link refid="baseband__filter__test_8cpp"/>
      </node>
      <node id="131">
        <label>src/alsa_test.cpp</label>
        <link refid="alsa__test_8cpp"/>
      </node>
      <node id="138">
        <label>src/mic_test.cpp</label>
        <link refid="mic__test_8cpp"/>
      </node>
      <node id="130">
        <label>src/definitions.hpp</label>
        <link refid="definitions.hpp"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>src/Filter.hpp</label>
        <link refid="Filter_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>src/zdomain.hpp</label>
        <link refid="zdomain_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>src/modulation.hpp</label>
        <link refid="modulation_8hpp"/>
      </node>
      <node id="134">
        <label>src/fvectors.hpp</label>
        <link refid="fvectors_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>src/fft_test2.cpp</label>
        <link refid="fft__test2_8cpp"/>
      </node>
      <node id="140">
        <label>src/ZDomain.hpp</label>
        <link refid="ZDomain_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceradio">radio</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="definitions_8hpp_1a378181c29a641d58f55d647b5a9599f2" prot="public" static="no">
        <name>ENUM</name>
        <initializer>signed char</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="14" column="9" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="definitions_8hpp_1a0c8186d9b9b7880309c27230bbb5e69d" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="16" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1adde6aaee8457bee49c2a92621fe22b79" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uint8</definition>
        <argsstring></argsstring>
        <name>uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="17" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a1a6408291ee3cfd0760a61ac64084154" prot="public" static="no">
        <type>signed char</type>
        <definition>typedef signed char sint8</definition>
        <argsstring></argsstring>
        <name>sint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="18" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short uint16</definition>
        <argsstring></argsstring>
        <name>uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="20" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a74df79fde3c518e55b29ce6360a9c76e" prot="public" static="no">
        <type>signed short</type>
        <definition>typedef signed short sint16</definition>
        <argsstring></argsstring>
        <name>sint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="21" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint32</definition>
        <argsstring></argsstring>
        <name>uint32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="23" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a0573de65958b4fda3a0460ed417dafb8" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int sint32</definition>
        <argsstring></argsstring>
        <name>sint32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="24" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a29940ae63ec06c9998bba873e25407ad" prot="public" static="no">
        <type>unsigned long long</type>
        <definition>typedef unsigned long long uint64</definition>
        <argsstring></argsstring>
        <name>uint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="26" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1ad91d7e42d1c1abce1d9eeacd54cc0497" prot="public" static="no">
        <type>signed long long</type>
        <definition>typedef signed long long sint64</definition>
        <argsstring></argsstring>
        <name>sint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="27" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" prot="public" static="no">
        <type>float</type>
        <definition>typedef float float32</definition>
        <argsstring></argsstring>
        <name>float32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="29" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a232fad1b0d6dcc7c16aabde98b2e2a80" prot="public" static="no">
        <type>double</type>
        <definition>typedef double float64</definition>
        <argsstring></argsstring>
        <name>float64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="30" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" prot="public" static="no">
        <type>std::complex&lt; <ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> &gt;</type>
        <definition>typedef std::complex&lt;float32&gt; cfloat32</definition>
        <argsstring></argsstring>
        <name>cfloat32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines a type for complex float32&apos;s. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="35" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="definitions_8hpp_1af19387f95516e2132a08cf60503f22a5" prot="public" static="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::vector&lt;float32&gt; &gt; fparams</definition>
        <argsstring></argsstring>
        <name>fparams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines a type for the filter coefficients. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/radio/src/definitions.hpp" line="40" column="1" bodyfile="/home/pi/radio/src/definitions.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains declarations of system-independant (universal size) integers and float types, shortened type names for some commonly used types, and enumerations. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Andrew Wisner, <ulink url="mailto:awisner94@gmail.com">awisner94@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>definitions_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>definitions_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="definitions_8hpp_1a378181c29a641d58f55d647b5a9599f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENUM<sp/>signed<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="definitions_8hpp_1a0c8186d9b9b7880309c27230bbb5e69d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="17" refid="definitions_8hpp_1adde6aaee8457bee49c2a92621fe22b79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref>;</highlight></codeline>
<codeline lineno="18" refid="definitions_8hpp_1a1a6408291ee3cfd0760a61ac64084154" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a1a6408291ee3cfd0760a61ac64084154" kindref="member">sint8</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="definitions_8hpp_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref>;</highlight></codeline>
<codeline lineno="21" refid="definitions_8hpp_1a74df79fde3c518e55b29ce6360a9c76e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a74df79fde3c518e55b29ce6360a9c76e" kindref="member">sint16</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref>;</highlight></codeline>
<codeline lineno="24" refid="definitions_8hpp_1a0573de65958b4fda3a0460ed417dafb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a0573de65958b4fda3a0460ed417dafb8" kindref="member">sint32</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="definitions_8hpp_1a29940ae63ec06c9998bba873e25407ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a29940ae63ec06c9998bba873e25407ad" kindref="member">uint64</ref>;</highlight></codeline>
<codeline lineno="27" refid="definitions_8hpp_1ad91d7e42d1c1abce1d9eeacd54cc0497" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1ad91d7e42d1c1abce1d9eeacd54cc0497" kindref="member">sint64</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref>;</highlight></codeline>
<codeline lineno="30" refid="definitions_8hpp_1a232fad1b0d6dcc7c16aabde98b2e2a80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="definitions_8hpp_1a232fad1b0d6dcc7c16aabde98b2e2a80" kindref="member">float64</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::complex&lt;float32&gt;<sp/><ref refid="definitions_8hpp_1a960be6b6614c08090c16574dba10a421" kindref="member">cfloat32</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="definitions_8hpp_1af19387f95516e2132a08cf60503f22a5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;float32&gt;&gt;<sp/><ref refid="definitions_8hpp_1af19387f95516e2132a08cf60503f22a5" kindref="member">fparams</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespaceradio" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceradio" kindref="compound">radio</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3afbe8ecd067dc1095175b7cdc7cecbb82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3" kindref="member">Age</ref><sp/>{<sp/><ref refid="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3afbe8ecd067dc1095175b7cdc7cecbb82" kindref="member">OLD</ref>,<sp/><ref refid="namespaceradio_1a90839d95c13fa21f45e9cd380e38f1f3ac1a7d3b0b6d1c9639e94bdd8c8692686" kindref="member">NEW</ref><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0daca7436a425f0fd0f72aa39de328f2bdd48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0dac" kindref="member">Fractional</ref><sp/>{<sp/><ref refid="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0daca7436a425f0fd0f72aa39de328f2bdd48" kindref="member">NUM</ref>,<sp/><ref refid="namespaceradio_1aa2a4fb91116a2b9a094776a29cce0daca2fd2fe719e453d2bda50a402c0f49abe" kindref="member">DEN</ref><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/pi/radio/src/definitions.hpp"/>
  </compounddef>
</doxygen>
